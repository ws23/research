package net.sf.fmj.test.compat.formats;

import junit.framework.TestCase;
import javax.media.Format;
import javax.media.format.AudioFormat;



public class BigGeneratedAudioFormatTest8 extends TestCase
{
	public void test0()
	{
		/* 0 */ assertEquals(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray).clone(), new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray));
		/* 1 */ assertEquals(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray).clone(), new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray));
		/* 2 */ assertEquals(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray).clone(), new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray));
		/* 3 */ assertEquals(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray).clone(), new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray));
		/* 4 */ assertEquals(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray).clone(), new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray));
		/* 5 */ assertEquals(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).clone(), new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray));
		/* 6 */ assertEquals(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).clone(), new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray));
		/* 7 */ assertEquals(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray).clone(), new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray));
		/* 8 */ assertEquals(new AudioFormat("ULAW", -1.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).clone(), new AudioFormat("ULAW", -1.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray));
		/* 9 */ assertEquals(new AudioFormat("dvi/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray).clone(), new AudioFormat("dvi/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray));
		/* 10 */ assertEquals(new AudioFormat("gsm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray).clone(), new AudioFormat("gsm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray));
		/* 11 */ assertEquals(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray).clone(), new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray));
		/* 12 */ assertEquals(new AudioFormat("gsm", 8000.0, -1, 1, -1, -1, 264, -1.0, Format.byteArray).clone(), new AudioFormat("gsm", 8000.0, -1, 1, -1, -1, 264, -1.0, Format.byteArray));
		/* 13 */ assertEquals(new AudioFormat("ULAW/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray).clone(), new AudioFormat("ULAW/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray));
		/* 14 */ assertEquals(new AudioFormat("ULAW/rtp", 8000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).clone(), new AudioFormat("ULAW/rtp", 8000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray));

	}
	

	public void test1()
	{
	/* 0 */ assertEquals(new com.sun.media.format.WavAudioFormat("LINEAR", 22050.0, 8, 1, 8, 22050, 0, 0, 22050.0f, Format.byteArray, null).intersects(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), new com.sun.media.format.WavAudioFormat("LINEAR", 22050.0, 8, 1, 8, 22050, 0, 0, 22050.0f, Format.byteArray, null));
	/* 1 */ assertEquals(new com.sun.media.format.WavAudioFormat("LINEAR", 22050.0, 8, 1, 8, 22050, 0, 0, 22050.0f, Format.byteArray, null).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new com.sun.media.format.WavAudioFormat("LINEAR", 22050.0, 8, 1, 8, 22050, 0, 0, 22050.0f, Format.byteArray, null));
	/* 2 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 1, 0, 1, 16, 22050.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 1, 0, 1, 16, 22050.0, Format.byteArray));
	/* 3 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 1, 0, 1, 16, 22050.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 1, 0, 1, 16, 22050.0, Format.byteArray));
	/* 4 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 1, 0, 1, 16, 22050.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 1, 0, 1, 16, 22050.0, Format.byteArray));
	/* 5 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 1, 0, 1, 16, 22050.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 1, 0, 1, 16, 22050.0, Format.byteArray));
	/* 6 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 2, 0, 1, 32, 22050.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 2, 0, 1, 32, 22050.0, Format.byteArray));
	/* 7 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 2, 0, 1, 32, 22050.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 2, 0, 1, 32, 22050.0, Format.byteArray));
	/* 8 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 2, 0, 1, 32, 22050.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 2, 0, 1, 32, 22050.0, Format.byteArray));
	/* 9 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 1, 1, 1, 16, 22050.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 1, 1, 1, 16, 22050.0, Format.byteArray));
	/* 10 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 1, 1, 1, 16, 22050.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 1, 1, 1, 16, 22050.0, Format.byteArray));
	/* 11 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 2, 1, 1, 32, 22050.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 2, 1, 1, 32, 22050.0, Format.byteArray));
	/* 12 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 2, 1, 1, 32, 22050.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 2, 1, 1, 32, 22050.0, Format.byteArray));
	/* 13 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 1, 0, 0, 16, 22050.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 1, 0, 0, 16, 22050.0, Format.byteArray));
	/* 14 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 1, 0, 0, 16, 22050.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 1, 0, 0, 16, 22050.0, Format.byteArray));
	/* 15 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 2, 0, 0, 32, 22050.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 2, 0, 0, 32, 22050.0, Format.byteArray));
	/* 16 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 2, 0, 0, 32, 22050.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 2, 0, 0, 32, 22050.0, Format.byteArray));
	/* 17 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 1, 1, 0, 16, 22050.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 1, 1, 0, 16, 22050.0, Format.byteArray));
	/* 18 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 1, 1, 0, 16, 22050.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 1, 1, 0, 16, 22050.0, Format.byteArray));
	/* 19 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 2, 1, 0, 32, 22050.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 2, 1, 0, 32, 22050.0, Format.byteArray));
	/* 20 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 2, 1, 0, 32, 22050.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 2, 1, 0, 32, 22050.0, Format.byteArray));
	/* 21 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 8, 1, -1, 1, 8, 22050.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 8, 1, -1, 1, 8, 22050.0, Format.byteArray));
	/* 22 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 8, 1, -1, 1, 8, 22050.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 8, 1, -1, 1, 8, 22050.0, Format.byteArray));
	/* 23 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 8, 2, -1, 1, 16, 22050.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 8, 2, -1, 1, 16, 22050.0, Format.byteArray));
	/* 24 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 8, 2, -1, 1, 16, 22050.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 8, 2, -1, 1, 16, 22050.0, Format.byteArray));
	/* 25 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 8, 1, -1, 0, 8, 22050.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 8, 1, -1, 0, 8, 22050.0, Format.byteArray));
	/* 26 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 8, 1, -1, 0, 8, 22050.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 8, 1, -1, 0, 8, 22050.0, Format.byteArray));
	/* 27 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 8, 2, -1, 0, 16, 22050.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 8, 2, -1, 0, 16, 22050.0, Format.byteArray));
	/* 28 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 8, 2, -1, 0, 16, 22050.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 8, 2, -1, 0, 16, 22050.0, Format.byteArray));
	/* 29 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray));
	/* 30 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray));
	/* 31 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray));
	/* 32 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray));
	/* 33 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray));
	/* 34 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray));
	/* 35 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray));
	/* 36 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 8, 1, 0, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 8, 1, 0, 0, -1, -1.0, Format.byteArray));
	/* 37 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 8, 1, 0, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 8, 1, 0, 0, -1, -1.0, Format.byteArray));
	/* 38 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 8, 1, 0, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 8, 1, 0, 0, -1, -1.0, Format.byteArray));
	/* 39 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 8, 1, 0, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 8, 1, 0, 0, -1, -1.0, Format.byteArray));
	/* 40 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 8, 1, 0, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 8, 1, 0, 0, -1, -1.0, Format.byteArray));
	/* 41 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 8, 1, 0, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 8, 1, 0, 0, -1, -1.0, Format.byteArray));
	/* 42 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 8, 1, 0, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 8, 1, 0, 0, -1, -1.0, Format.byteArray));
	/* 43 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 8, 1, 0, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 8, 1, 0, 0, -1, -1.0, Format.byteArray));
	/* 44 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 8, 1, 0, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 8, 1, 0, 0, -1, -1.0, Format.byteArray));
	/* 45 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 8, 1, 0, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 8, 1, 0, 0, -1, -1.0, Format.byteArray));
	/* 46 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 8, 1, 0, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 8, 1, 0, 0, -1, -1.0, Format.byteArray));
	/* 47 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 8, 1, 0, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 8, 1, 0, 0, -1, -1.0, Format.byteArray));
	/* 48 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, 0, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 8, 1, 0, 0, -1, -1.0, Format.byteArray));
	/* 49 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, 0, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 8, 1, 0, 0, -1, -1.0, Format.byteArray));
	/* 50 */ assertEquals(new AudioFormat("ULAW", 22050.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("ULAW", 22050.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray));
	/* 51 */ assertEquals(new AudioFormat("ULAW", 22050.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("ULAW", -1.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray)), new AudioFormat("ULAW", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray));
	/* 52 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray));
	/* 53 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray));
	/* 54 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray));
	/* 55 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray));
	/* 56 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray));
	/* 57 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray));
	/* 58 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray));
	/* 59 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray));
	/* 60 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray));
	/* 61 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray));
	/* 62 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray));
	/* 63 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray));
	/* 64 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray));
	/* 65 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray));
	/* 66 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray));
	/* 67 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray));
	/* 68 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray));
	/* 69 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray));
	/* 70 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray));
	/* 71 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray));
	/* 72 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray));
	/* 73 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray));
	/* 74 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray));
	/* 75 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray));
	/* 76 */ assertEquals(new AudioFormat("dvi/rtp", 22050.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("dvi/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("dvi/rtp", 22050.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray));
	/* 77 */ assertEquals(new AudioFormat("gsm", 22050.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).intersects(new AudioFormat("gsm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("gsm", 22050.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray));
	/* 78 */ assertEquals(new AudioFormat("ima4", 22050.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).intersects(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("ima4", 22050.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray));
	/* 79 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray));
	/* 80 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray));
	/* 81 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray));
	/* 82 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray));
	/* 83 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray));
	/* 84 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray));
	/* 85 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray));
	/* 86 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray));
	/* 87 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray));
	/* 88 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray));
	/* 89 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray));
	/* 90 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray));
	/* 91 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray));
	/* 92 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray));
	/* 93 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray));
	/* 94 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray));
	/* 95 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray));
	/* 96 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray));
	/* 97 */ assertEquals(new AudioFormat("ULAW", 22050.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("ULAW", 22050.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray));
	/* 98 */ assertEquals(new AudioFormat("ima4", 22050.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).intersects(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("ima4", 22050.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray));
	/* 99 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 16, 1, 1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 16, 1, 1, 1, -1, -1.0, Format.byteArray));
	/* 100 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 16, 1, 1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 16, 1, 1, 1, -1, -1.0, Format.byteArray));
	/* 101 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 1, 1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 16, 1, 1, 1, -1, -1.0, Format.byteArray));
	/* 102 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 1, 1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 16, 1, 1, 1, -1, -1.0, Format.byteArray));
	/* 103 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 1, 1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 16, 1, 1, 1, -1, -1.0, Format.byteArray));
	/* 104 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 1, 1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 16, 1, 1, 1, -1, -1.0, Format.byteArray));
	/* 105 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 1, 1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 1, 1, 1, -1, -1.0, Format.byteArray));
	/* 106 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 1, 1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 1, 1, 1, -1, -1.0, Format.byteArray));
	/* 107 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 1, 1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 16, 1, 1, 1, -1, -1.0, Format.byteArray));
	/* 108 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 1, 1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 16, 1, 1, 1, -1, -1.0, Format.byteArray));
	/* 109 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 1, 1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 16, 1, 1, 1, -1, -1.0, Format.byteArray));
	/* 110 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 1, 1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 16, 1, 1, 1, -1, -1.0, Format.byteArray));
	/* 111 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 1, -1, -1.0, Format.byteArray));
	/* 112 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 1, -1, -1.0, Format.byteArray));
	/* 113 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 16, 2, 1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 16, 2, 1, 1, -1, -1.0, Format.byteArray));
	/* 114 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 16, 2, 1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 16, 2, 1, 1, -1, -1.0, Format.byteArray));
	/* 115 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 2, 1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 16, 2, 1, 1, -1, -1.0, Format.byteArray));
	/* 116 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 2, 1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 16, 2, 1, 1, -1, -1.0, Format.byteArray));
	/* 117 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 2, 1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 16, 2, 1, 1, -1, -1.0, Format.byteArray));
	/* 118 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 2, 1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 16, 2, 1, 1, -1, -1.0, Format.byteArray));
	/* 119 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 2, 1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 2, 1, 1, -1, -1.0, Format.byteArray));
	/* 120 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 2, 1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 2, 1, 1, -1, -1.0, Format.byteArray));
	/* 121 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 2, 1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 16, 2, 1, 1, -1, -1.0, Format.byteArray));
	/* 122 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 2, 1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 16, 2, 1, 1, -1, -1.0, Format.byteArray));
	/* 123 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 2, 1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 16, 2, 1, 1, -1, -1.0, Format.byteArray));
	/* 124 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 2, 1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 16, 2, 1, 1, -1, -1.0, Format.byteArray));
	/* 125 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 1, -1, -1.0, Format.byteArray));
	/* 126 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 1, -1, -1.0, Format.byteArray));
	/* 127 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 16, 1, 0, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 16, 1, 0, 0, -1, -1.0, Format.byteArray));
	/* 128 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 16, 1, 0, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 16, 1, 0, 0, -1, -1.0, Format.byteArray));
	/* 129 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 1, 0, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 16, 1, 0, 0, -1, -1.0, Format.byteArray));
	/* 130 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 1, 0, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 16, 1, 0, 0, -1, -1.0, Format.byteArray));
	/* 131 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 1, 0, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 16, 1, 0, 0, -1, -1.0, Format.byteArray));
	/* 132 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 1, 0, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 16, 1, 0, 0, -1, -1.0, Format.byteArray));
	/* 133 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 1, 0, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 1, 0, 0, -1, -1.0, Format.byteArray));
	/* 134 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 1, 0, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 1, 0, 0, -1, -1.0, Format.byteArray));
	/* 135 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 1, 0, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 16, 1, 0, 0, -1, -1.0, Format.byteArray));
	/* 136 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 1, 0, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 16, 1, 0, 0, -1, -1.0, Format.byteArray));
	/* 137 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 1, 0, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 16, 1, 0, 0, -1, -1.0, Format.byteArray));
	/* 138 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 1, 0, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 16, 1, 0, 0, -1, -1.0, Format.byteArray));
	/* 139 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 0, -1, -1.0, Format.byteArray));
	/* 140 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 0, -1, -1.0, Format.byteArray));
	/* 141 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 16, 2, 0, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 16, 2, 0, 0, -1, -1.0, Format.byteArray));
	/* 142 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 16, 2, 0, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 16, 2, 0, 0, -1, -1.0, Format.byteArray));
	/* 143 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 2, 0, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 16, 2, 0, 0, -1, -1.0, Format.byteArray));
	/* 144 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 2, 0, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 16, 2, 0, 0, -1, -1.0, Format.byteArray));
	/* 145 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 2, 0, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 16, 2, 0, 0, -1, -1.0, Format.byteArray));
	/* 146 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 2, 0, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 16, 2, 0, 0, -1, -1.0, Format.byteArray));
	/* 147 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 2, 0, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 2, 0, 0, -1, -1.0, Format.byteArray));
	/* 148 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 2, 0, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 2, 0, 0, -1, -1.0, Format.byteArray));
	/* 149 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 2, 0, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 16, 2, 0, 0, -1, -1.0, Format.byteArray));
	/* 150 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 2, 0, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 16, 2, 0, 0, -1, -1.0, Format.byteArray));
	/* 151 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 2, 0, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 16, 2, 0, 0, -1, -1.0, Format.byteArray));
	/* 152 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 2, 0, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 16, 2, 0, 0, -1, -1.0, Format.byteArray));
	/* 153 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, -1, -1.0, Format.byteArray));
	/* 154 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, -1, -1.0, Format.byteArray));
	/* 155 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 16, 1, 1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 16, 1, 1, 0, -1, -1.0, Format.byteArray));
	/* 156 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 16, 1, 1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 16, 1, 1, 0, -1, -1.0, Format.byteArray));
	/* 157 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 1, 1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 16, 1, 1, 0, -1, -1.0, Format.byteArray));
	/* 158 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 1, 1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 16, 1, 1, 0, -1, -1.0, Format.byteArray));
	/* 159 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 1, 1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 16, 1, 1, 0, -1, -1.0, Format.byteArray));
	/* 160 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 1, 1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 16, 1, 1, 0, -1, -1.0, Format.byteArray));
	/* 161 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 1, 1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 1, 1, 0, -1, -1.0, Format.byteArray));
	/* 162 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 1, 1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 1, 1, 0, -1, -1.0, Format.byteArray));
	/* 163 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 1, 1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 16, 1, 1, 0, -1, -1.0, Format.byteArray));
	/* 164 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 1, 1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 16, 1, 1, 0, -1, -1.0, Format.byteArray));
	/* 165 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 1, 1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 16, 1, 1, 0, -1, -1.0, Format.byteArray));
	/* 166 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 1, 1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 16, 1, 1, 0, -1, -1.0, Format.byteArray));
	/* 167 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, -1, -1.0, Format.byteArray));
	/* 168 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, -1, -1.0, Format.byteArray));
	/* 169 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 16, 2, 1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 16, 2, 1, 0, -1, -1.0, Format.byteArray));
	/* 170 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 16, 2, 1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 16, 2, 1, 0, -1, -1.0, Format.byteArray));
	/* 171 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 2, 1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 16, 2, 1, 0, -1, -1.0, Format.byteArray));
	/* 172 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 2, 1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 16, 2, 1, 0, -1, -1.0, Format.byteArray));
	/* 173 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 2, 1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 16, 2, 1, 0, -1, -1.0, Format.byteArray));
	/* 174 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 2, 1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 16, 2, 1, 0, -1, -1.0, Format.byteArray));
	/* 175 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 2, 1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 2, 1, 0, -1, -1.0, Format.byteArray));
	/* 176 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 2, 1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 2, 1, 0, -1, -1.0, Format.byteArray));
	/* 177 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 2, 1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 16, 2, 1, 0, -1, -1.0, Format.byteArray));
	/* 178 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 2, 1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 16, 2, 1, 0, -1, -1.0, Format.byteArray));
	/* 179 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 2, 1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 16, 2, 1, 0, -1, -1.0, Format.byteArray));
	/* 180 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 2, 1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 16, 2, 1, 0, -1, -1.0, Format.byteArray));
	/* 181 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, -1, -1.0, Format.byteArray));
	/* 182 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, -1, -1.0, Format.byteArray));
	/* 183 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 8, 1, -1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 8, 1, -1, 1, -1, -1.0, Format.byteArray));
	/* 184 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 8, 1, -1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 8, 1, -1, 1, -1, -1.0, Format.byteArray));
	/* 185 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 8, 1, -1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 8, 1, -1, 1, -1, -1.0, Format.byteArray));
	/* 186 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 8, 1, -1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 8, 1, -1, 1, -1, -1.0, Format.byteArray));
	/* 187 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 8, 1, -1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 8, 1, -1, 1, -1, -1.0, Format.byteArray));
	/* 188 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 8, 1, -1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 8, 1, -1, 1, -1, -1.0, Format.byteArray));
	/* 189 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 8, 1, -1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 8, 1, -1, 1, -1, -1.0, Format.byteArray));
	/* 190 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 8, 1, -1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 8, 1, -1, 1, -1, -1.0, Format.byteArray));
	/* 191 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 8, 1, -1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 8, 1, -1, 1, -1, -1.0, Format.byteArray));
	/* 192 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 8, 1, -1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 8, 1, -1, 1, -1, -1.0, Format.byteArray));
	/* 193 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 8, 1, -1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 8, 1, -1, 1, -1, -1.0, Format.byteArray));
	/* 194 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 8, 1, -1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 8, 1, -1, 1, -1, -1.0, Format.byteArray));
	/* 195 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, -1, -1.0, Format.byteArray));
	/* 196 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, -1, -1.0, Format.byteArray));
	/* 197 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 8, 2, -1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 8, 2, -1, 1, -1, -1.0, Format.byteArray));
	/* 198 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 8, 2, -1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 8, 2, -1, 1, -1, -1.0, Format.byteArray));
	/* 199 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 8, 2, -1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 8, 2, -1, 1, -1, -1.0, Format.byteArray));
	/* 200 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 8, 2, -1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 8, 2, -1, 1, -1, -1.0, Format.byteArray));
	/* 201 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 8, 2, -1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 8, 2, -1, 1, -1, -1.0, Format.byteArray));
	/* 202 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 8, 2, -1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 8, 2, -1, 1, -1, -1.0, Format.byteArray));
	/* 203 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 8, 2, -1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 8, 2, -1, 1, -1, -1.0, Format.byteArray));
	/* 204 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 8, 2, -1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 8, 2, -1, 1, -1, -1.0, Format.byteArray));
	/* 205 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 8, 2, -1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 8, 2, -1, 1, -1, -1.0, Format.byteArray));
	/* 206 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 8, 2, -1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 8, 2, -1, 1, -1, -1.0, Format.byteArray));
	/* 207 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 8, 2, -1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 8, 2, -1, 1, -1, -1.0, Format.byteArray));
	/* 208 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 8, 2, -1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 8, 2, -1, 1, -1, -1.0, Format.byteArray));
	/* 209 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, -1, -1.0, Format.byteArray));
	/* 210 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, -1, -1.0, Format.byteArray));
	/* 211 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 8, 1, -1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 8, 1, -1, 0, -1, -1.0, Format.byteArray));
	/* 212 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 8, 1, -1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 8, 1, -1, 0, -1, -1.0, Format.byteArray));
	/* 213 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 8, 1, -1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 8, 1, -1, 0, -1, -1.0, Format.byteArray));
	/* 214 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 8, 1, -1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 8, 1, -1, 0, -1, -1.0, Format.byteArray));
	/* 215 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 8, 1, -1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 8, 1, -1, 0, -1, -1.0, Format.byteArray));
	/* 216 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 8, 1, -1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 8, 1, -1, 0, -1, -1.0, Format.byteArray));
	/* 217 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 8, 1, -1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 8, 1, -1, 0, -1, -1.0, Format.byteArray));
	/* 218 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 8, 1, -1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 8, 1, -1, 0, -1, -1.0, Format.byteArray));
	/* 219 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 8, 1, -1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 8, 1, -1, 0, -1, -1.0, Format.byteArray));
	/* 220 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 8, 1, -1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 8, 1, -1, 0, -1, -1.0, Format.byteArray));
	/* 221 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 8, 1, -1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 8, 1, -1, 0, -1, -1.0, Format.byteArray));
	/* 222 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 8, 1, -1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 8, 1, -1, 0, -1, -1.0, Format.byteArray));
	/* 223 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, -1, -1.0, Format.byteArray));
	/* 224 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, -1, -1.0, Format.byteArray));
	/* 225 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 8, 2, -1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 8, 2, -1, 0, -1, -1.0, Format.byteArray));
	/* 226 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 8, 2, -1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 8, 2, -1, 0, -1, -1.0, Format.byteArray));
	/* 227 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 8, 2, -1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 8, 2, -1, 0, -1, -1.0, Format.byteArray));
	/* 228 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 8, 2, -1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 8, 2, -1, 0, -1, -1.0, Format.byteArray));
	/* 229 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 8, 2, -1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 8, 2, -1, 0, -1, -1.0, Format.byteArray));
	/* 230 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 8, 2, -1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 8, 2, -1, 0, -1, -1.0, Format.byteArray));
	/* 231 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 8, 2, -1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 8, 2, -1, 0, -1, -1.0, Format.byteArray));
	/* 232 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 8, 2, -1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 8, 2, -1, 0, -1, -1.0, Format.byteArray));
	/* 233 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 8, 2, -1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 8, 2, -1, 0, -1, -1.0, Format.byteArray));
	/* 234 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 8, 2, -1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 8, 2, -1, 0, -1, -1.0, Format.byteArray));
	/* 235 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 8, 2, -1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 8, 2, -1, 0, -1, -1.0, Format.byteArray));
	/* 236 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 8, 2, -1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 8, 2, -1, 0, -1, -1.0, Format.byteArray));
	/* 237 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, -1, -1.0, Format.byteArray));
	/* 238 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, -1, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, -1, -1.0, Format.byteArray));
	/* 239 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray));
	/* 240 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray));
	/* 241 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray));
	/* 242 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray));
	/* 243 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray));
	/* 244 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray));
	/* 245 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray));
	/* 246 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 16, 1, 1, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 16, 1, 1, 1, 16, -1.0, Format.byteArray));
	/* 247 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 16, 1, 1, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 16, 1, 1, 1, 16, -1.0, Format.byteArray));
	/* 248 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 16, 2, 1, 1, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 16, 2, 1, 1, 32, -1.0, Format.byteArray));
	/* 249 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 16, 2, 1, 1, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 16, 2, 1, 1, 32, -1.0, Format.byteArray));
	/* 250 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray));
	/* 251 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray));
	/* 252 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray));
	/* 253 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray));
	/* 254 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray));
	/* 255 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray));
	/* 256 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray));
	/* 257 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray));
	/* 258 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray));
	/* 259 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray));
	/* 260 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray));
	/* 261 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray));
	/* 262 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray));
	/* 263 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray));
	/* 264 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray));
	/* 265 */ assertEquals(new AudioFormat("LINEAR", 8000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 8000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray));
	/* 266 */ assertEquals(new AudioFormat("ULAW", 8000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("ULAW", 8000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray));
	/* 267 */ assertEquals(new AudioFormat("ULAW", 8000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("ULAW", -1.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray)), new AudioFormat("ULAW", 8000.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray));
	/* 268 */ assertEquals(new AudioFormat("dvi/rtp", 8000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("dvi/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("dvi/rtp", 8000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray));
	/* 269 */ assertEquals(new AudioFormat("gsm", 8000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).intersects(new AudioFormat("gsm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("gsm", 8000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray));
	/* 270 */ assertEquals(new AudioFormat("gsm", 8000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).intersects(new AudioFormat("gsm", 8000.0, -1, 1, -1, -1, 264, -1.0, Format.byteArray)), new AudioFormat("gsm", 8000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray));
	/* 271 */ assertEquals(new AudioFormat("ima4", 8000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).intersects(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("ima4", 8000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray));
	/* 272 */ assertEquals(new AudioFormat("ULAW", 8000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("ULAW", 8000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray));
	/* 273 */ assertEquals(new AudioFormat("ima4", 8000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).intersects(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("ima4", 8000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray));
	/* 274 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray));
	/* 275 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray));
	/* 276 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray));
	/* 277 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray));
	/* 278 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray));
	/* 279 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray));
	/* 280 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray));
	/* 281 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 1, 1, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 16, 1, 1, 1, 16, -1.0, Format.byteArray));
	/* 282 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 1, 1, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 16, 1, 1, 1, 16, -1.0, Format.byteArray));
	/* 283 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 2, 1, 1, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 16, 2, 1, 1, 32, -1.0, Format.byteArray));
	/* 284 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 2, 1, 1, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 16, 2, 1, 1, 32, -1.0, Format.byteArray));
	/* 285 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray));
	/* 286 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray));
	/* 287 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray));
	/* 288 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray));
	/* 289 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray));
	/* 290 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray));
	/* 291 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray));
	/* 292 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray));
	/* 293 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray));
	/* 294 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray));
	/* 295 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray));
	/* 296 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray));
	/* 297 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray));
	/* 298 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray));
	/* 299 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray));
	/* 300 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 11025.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray));
	/* 301 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("ULAW", 11025.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray));
	/* 302 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("ULAW", -1.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray)), new AudioFormat("ULAW", 11025.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray));
	/* 303 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray));
	/* 304 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray));
	/* 305 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray));
	/* 306 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray));
	/* 307 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray));
	/* 308 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray));
	/* 309 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray));
	/* 310 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 1, 1, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 16, 1, 1, 1, 16, -1.0, Format.byteArray));
	/* 311 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 1, 1, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 16, 1, 1, 1, 16, -1.0, Format.byteArray));
	/* 312 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 2, 1, 1, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 16, 2, 1, 1, 32, -1.0, Format.byteArray));
	/* 313 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 2, 1, 1, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 16, 2, 1, 1, 32, -1.0, Format.byteArray));
	/* 314 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray));
	/* 315 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray));
	/* 316 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray));
	/* 317 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray));
	/* 318 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray));
	/* 319 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray));
	/* 320 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray));
	/* 321 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray));
	/* 322 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray));
	/* 323 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray));
	/* 324 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray));
	/* 325 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray));
	/* 326 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray));
	/* 327 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray));
	/* 328 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray));
	/* 329 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 16000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray));
	/* 330 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("ULAW", 16000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray));
	/* 331 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("ULAW", -1.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray)), new AudioFormat("ULAW", 16000.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray));
	/* 332 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray));
	/* 333 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray));
	/* 334 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray));
	/* 335 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray));
	/* 336 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray));
	/* 337 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray));
	/* 338 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray));
	/* 339 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 1, 1, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 1, 1, 1, 16, -1.0, Format.byteArray));
	/* 340 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 1, 1, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 1, 1, 1, 16, -1.0, Format.byteArray));
	/* 341 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 2, 1, 1, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 2, 1, 1, 32, -1.0, Format.byteArray));
	/* 342 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 2, 1, 1, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 2, 1, 1, 32, -1.0, Format.byteArray));
	/* 343 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray));
	/* 344 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray));
	/* 345 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray));
	/* 346 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray));
	/* 347 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray));
	/* 348 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray));
	/* 349 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray));
	/* 350 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray));
	/* 351 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray));
	/* 352 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray));
	/* 353 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray));
	/* 354 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray));
	/* 355 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray));
	/* 356 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray));
	/* 357 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray));
	/* 358 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 22050.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray));
	/* 359 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray));
	/* 360 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray));
	/* 361 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray));
	/* 362 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray));
	/* 363 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray));
	/* 364 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray));
	/* 365 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray));
	/* 366 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 1, 1, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 16, 1, 1, 1, 16, -1.0, Format.byteArray));
	/* 367 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 1, 1, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 16, 1, 1, 1, 16, -1.0, Format.byteArray));
	/* 368 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 2, 1, 1, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 16, 2, 1, 1, 32, -1.0, Format.byteArray));
	/* 369 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 2, 1, 1, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 16, 2, 1, 1, 32, -1.0, Format.byteArray));
	/* 370 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray));
	/* 371 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray));
	/* 372 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray));
	/* 373 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray));
	/* 374 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray));
	/* 375 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray));
	/* 376 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray));
	/* 377 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray));
	/* 378 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray));
	/* 379 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray));
	/* 380 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray));
	/* 381 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray));
	/* 382 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray));
	/* 383 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray));
	/* 384 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray));
	/* 385 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 32000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray));
	/* 386 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("ULAW", 32000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray));
	/* 387 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("ULAW", -1.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray)), new AudioFormat("ULAW", 32000.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray));
	/* 388 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray));
	/* 389 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray));
	/* 390 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray));
	/* 391 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray));
	/* 392 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray));
	/* 393 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray));
	/* 394 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray));
	/* 395 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 1, 1, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 16, 1, 1, 1, 16, -1.0, Format.byteArray));
	/* 396 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 1, 1, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 16, 1, 1, 1, 16, -1.0, Format.byteArray));
	/* 397 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 2, 1, 1, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 16, 2, 1, 1, 32, -1.0, Format.byteArray));
	/* 398 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 2, 1, 1, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 16, 2, 1, 1, 32, -1.0, Format.byteArray));
	/* 399 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray));
	/* 400 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray));
	/* 401 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray));
	/* 402 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray));
	/* 403 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray));
	/* 404 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray));
	/* 405 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray));
	/* 406 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray));
	/* 407 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray));
	/* 408 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray));
	/* 409 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray));
	/* 410 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray));
	/* 411 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray));
	/* 412 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray));
	/* 413 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray));
	/* 414 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 44100.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray));
	/* 415 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("ULAW", 44100.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray));
	/* 416 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("ULAW", -1.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray)), new AudioFormat("ULAW", 44100.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray));
	/* 417 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray));
	/* 418 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray));
	/* 419 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray));
	/* 420 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray));
	/* 421 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray));
	/* 422 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray));
	/* 423 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray));
	/* 424 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 1, 16, -1.0, Format.byteArray));
	/* 425 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 1, 16, -1.0, Format.byteArray));
	/* 426 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 1, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 1, 32, -1.0, Format.byteArray));
	/* 427 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 1, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 1, 32, -1.0, Format.byteArray));
	/* 428 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray));
	/* 429 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray));
	/* 430 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray));
	/* 431 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray));
	/* 432 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray));
	/* 433 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray));
	/* 434 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray));
	/* 435 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray));
	/* 436 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray));
	/* 437 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray));
	/* 438 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray));
	/* 439 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray));
	/* 440 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray));
	/* 441 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray));
	/* 442 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray));
	/* 443 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).intersects(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray));
	/* 444 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray));
	/* 445 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("ULAW", -1.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray)), new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray));
	/* 446 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).intersects(new AudioFormat("ULAW/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray));
	/* 447 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("dvi/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray));
	/* 448 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).intersects(new AudioFormat("gsm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray));
	/* 449 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).intersects(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray));
	/* 450 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("dvi/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray));
	/* 451 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).intersects(new AudioFormat("gsm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray));
	/* 452 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).intersects(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray));
	/* 453 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("dvi/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray));
	/* 454 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).intersects(new AudioFormat("gsm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray));
	/* 455 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).intersects(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray));
	/* 456 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("dvi/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray));
	/* 457 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).intersects(new AudioFormat("gsm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray));
	/* 458 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).intersects(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray));
	/* 459 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("dvi/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray));
	/* 460 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).intersects(new AudioFormat("gsm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray));
	/* 461 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).intersects(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray));
	/* 462 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray));
	/* 463 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).intersects(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray));
	/* 464 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray));
	/* 465 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).intersects(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray));
	/* 466 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray));
	/* 467 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).intersects(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray));
	/* 468 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray));
	/* 469 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).intersects(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray));
	/* 470 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).intersects(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray));
	/* 471 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).intersects(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray));
	/* 472 */ assertEquals(new AudioFormat("ULAW/rtp", 8000.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).intersects(new AudioFormat("ULAW/rtp", 8000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), new AudioFormat("ULAW/rtp", 8000.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray));


	}
	
	public void test2()
	{

		System.out.println(new AudioFormat("ULAW/rtp", 8000.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).computeDuration(16L));
		assertTrue(new AudioFormat("ULAW/rtp", 8000.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).computeDuration(480L) == 60000000L);
		assertTrue(new AudioFormat("ULAW/rtp", 8000.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).computeDuration(16L) == 2000000L);
		assertTrue(new AudioFormat("ULAW", 8000.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).computeDuration(16L) == 2000000L);
		assertTrue(new AudioFormat("LINEAR", 8000.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).computeDuration(16L) == 2000000L);

	}

}
