package net.sf.fmj.test.compat.formats;

import javax.media.Format;
import javax.media.format.AudioFormat;
import javax.media.format.RGBFormat;
import javax.media.format.VideoFormat;

import junit.framework.TestCase;

public class BigGeneratedAudioFormatTest3 extends TestCase
{

	public void test0()
	{
	}
		public void test1()
		{
		/* 10000 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("gsm/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10001 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("gsm/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10002 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10003 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("ima4/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10004 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 10005 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 10006 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray)), false);
		/* 10007 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10008 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10009 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10010 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10011 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10012 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10013 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10014 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10015 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("gsm", 8000.0, -1, 1, -1, -1, 264, -1.0, Format.byteArray)), false);
		/* 10016 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("g723", 8000.0, -1, 1, -1, -1, 192, -1.0, Format.byteArray)), false);
		/* 10017 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray).matches(new VideoFormat("jpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 10018 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray).matches(new VideoFormat("jpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10019 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray).matches(new VideoFormat("mpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 10020 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray).matches(new VideoFormat("mpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10021 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray)), false);
		/* 10022 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray)), false);
		/* 10023 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 1, 16, -1.0, Format.byteArray)), false);
		/* 10024 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 1, 32, -1.0, Format.byteArray)), false);
		/* 10025 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray)), false);
		/* 10026 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray)), true);
		/* 10027 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10028 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10029 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10030 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10031 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10032 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10033 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new VideoFormat("cvid", null, -1, Format.byteArray, -1.0f)), false);
		/* 10034 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new VideoFormat("h263", null, -1, Format.byteArray, -1.0f)), false);
		/* 10035 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new VideoFormat("h263/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10036 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, null, -1.0f, -1, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 10037 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.byteArray, -1.0f, 24, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 10038 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff0000, 0xff00, 0xff, 1, -1, -1, -1)), false);
		/* 10039 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff, 0xff00, 0xff0000, 1, -1, -1, -1)), false);
		/* 10040 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10041 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 10042 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 10043 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("msadpcm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10044 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10045 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("alaw", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10046 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("dvi/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10047 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("g723", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10048 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("g723/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10049 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("gsm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10050 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("gsm/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10051 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("gsm/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10052 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10053 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("ima4/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10054 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 10055 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 10056 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray)), false);
		/* 10057 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10058 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10059 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10060 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10061 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10062 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10063 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10064 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10065 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("gsm", 8000.0, -1, 1, -1, -1, 264, -1.0, Format.byteArray)), false);
		/* 10066 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("g723", 8000.0, -1, 1, -1, -1, 192, -1.0, Format.byteArray)), false);
		/* 10067 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new VideoFormat("jpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 10068 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new VideoFormat("jpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10069 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new VideoFormat("mpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 10070 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray).matches(new VideoFormat("mpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10071 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray)), false);
		/* 10072 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray)), false);
		/* 10073 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 1, 32, -1.0, Format.byteArray)), false);
		/* 10074 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 1, 16, -1.0, Format.byteArray)), false);
		/* 10075 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray)), false);
		/* 10076 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray)), false);
		/* 10077 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray)), false);
		/* 10078 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray)), true);
		/* 10079 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10080 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10081 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10082 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10083 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10084 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10085 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new VideoFormat("cvid", null, -1, Format.byteArray, -1.0f)), false);
		/* 10086 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new VideoFormat("h263", null, -1, Format.byteArray, -1.0f)), false);
		/* 10087 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new VideoFormat("h263/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10088 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, null, -1.0f, -1, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 10089 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.byteArray, -1.0f, 24, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 10090 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff0000, 0xff00, 0xff, 1, -1, -1, -1)), false);
		/* 10091 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff, 0xff00, 0xff0000, 1, -1, -1, -1)), false);
		/* 10092 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 10093 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10094 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 10095 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("msadpcm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10096 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10097 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("alaw", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10098 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("dvi/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10099 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("g723", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10100 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("g723/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10101 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("gsm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10102 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("gsm/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10103 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("gsm/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10104 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10105 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("ima4/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10106 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 10107 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 10108 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray)), false);
		/* 10109 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10110 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10111 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10112 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10113 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10114 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10115 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10116 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10117 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("gsm", 8000.0, -1, 1, -1, -1, 264, -1.0, Format.byteArray)), false);
		/* 10118 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("g723", 8000.0, -1, 1, -1, -1, 192, -1.0, Format.byteArray)), false);
		/* 10119 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new VideoFormat("jpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 10120 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new VideoFormat("jpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10121 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new VideoFormat("mpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 10122 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray).matches(new VideoFormat("mpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10123 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray)), false);
		/* 10124 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray)), false);
		/* 10125 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 1, 16, -1.0, Format.byteArray)), false);
		/* 10126 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 1, 32, -1.0, Format.byteArray)), false);
		/* 10127 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray)), false);
		/* 10128 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray)), false);
		/* 10129 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray)), false);
		/* 10130 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray)), true);
		/* 10131 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10132 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10133 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10134 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10135 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10136 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10137 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new VideoFormat("cvid", null, -1, Format.byteArray, -1.0f)), false);
		/* 10138 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new VideoFormat("h263", null, -1, Format.byteArray, -1.0f)), false);
		/* 10139 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new VideoFormat("h263/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10140 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, null, -1.0f, -1, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 10141 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.byteArray, -1.0f, 24, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 10142 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff0000, 0xff00, 0xff, 1, -1, -1, -1)), false);
		/* 10143 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff, 0xff00, 0xff0000, 1, -1, -1, -1)), false);
		/* 10144 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10145 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 10146 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 10147 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("msadpcm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10148 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10149 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("alaw", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10150 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("dvi/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10151 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("g723", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10152 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("g723/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10153 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("gsm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10154 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("gsm/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10155 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("gsm/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10156 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10157 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("ima4/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10158 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 10159 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 10160 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray)), false);
		/* 10161 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10162 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10163 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10164 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10165 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10166 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10167 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10168 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10169 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("gsm", 8000.0, -1, 1, -1, -1, 264, -1.0, Format.byteArray)), false);
		/* 10170 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new AudioFormat("g723", 8000.0, -1, 1, -1, -1, 192, -1.0, Format.byteArray)), false);
		/* 10171 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new VideoFormat("jpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 10172 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new VideoFormat("jpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10173 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new VideoFormat("mpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 10174 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray).matches(new VideoFormat("mpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10175 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray)), false);
		/* 10176 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray)), false);
		/* 10177 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 1, 32, -1.0, Format.byteArray)), false);
		/* 10178 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 1, 16, -1.0, Format.byteArray)), false);
		/* 10179 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray)), false);
		/* 10180 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray)), false);
		/* 10181 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray)), false);
		/* 10182 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray)), false);
		/* 10183 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray)), false);
		/* 10184 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray)), true);
		/* 10185 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10186 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10187 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10188 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10189 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10190 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10191 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new VideoFormat("cvid", null, -1, Format.byteArray, -1.0f)), false);
		/* 10192 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new VideoFormat("h263", null, -1, Format.byteArray, -1.0f)), false);
		/* 10193 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new VideoFormat("h263/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10194 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, null, -1.0f, -1, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 10195 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.byteArray, -1.0f, 24, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 10196 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff0000, 0xff00, 0xff, 1, -1, -1, -1)), false);
		/* 10197 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff, 0xff00, 0xff0000, 1, -1, -1, -1)), false);
		/* 10198 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10199 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10200 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 10201 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10202 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 10203 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new AudioFormat("msadpcm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10204 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10205 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new AudioFormat("alaw", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10206 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new AudioFormat("dvi/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10207 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new AudioFormat("g723", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10208 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new AudioFormat("g723/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10209 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new AudioFormat("gsm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10210 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new AudioFormat("gsm/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10211 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new AudioFormat("gsm/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10212 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10213 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new AudioFormat("ima4/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10214 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 10215 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 10216 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray)), false);
		/* 10217 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10218 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10219 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10220 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10221 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10222 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10223 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10224 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10225 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new AudioFormat("gsm", 8000.0, -1, 1, -1, -1, 264, -1.0, Format.byteArray)), false);
		/* 10226 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new AudioFormat("g723", 8000.0, -1, 1, -1, -1, 192, -1.0, Format.byteArray)), false);
		/* 10227 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new VideoFormat("jpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 10228 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new VideoFormat("jpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10229 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new VideoFormat("mpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 10230 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray).matches(new VideoFormat("mpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10231 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray)), false);
		/* 10232 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray)), false);
		/* 10233 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 1, 16, -1.0, Format.byteArray)), false);
		/* 10234 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 1, 32, -1.0, Format.byteArray)), false);
		/* 10235 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray)), false);
		/* 10236 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray)), false);
		/* 10237 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray)), false);
		/* 10238 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray)), false);
		/* 10239 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray)), false);
		/* 10240 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray)), true);
		/* 10241 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10242 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10243 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10244 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10245 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10246 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10247 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new VideoFormat("cvid", null, -1, Format.byteArray, -1.0f)), false);
		/* 10248 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new VideoFormat("h263", null, -1, Format.byteArray, -1.0f)), false);
		/* 10249 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new VideoFormat("h263/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10250 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, null, -1.0f, -1, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 10251 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.byteArray, -1.0f, 24, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 10252 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff0000, 0xff00, 0xff, 1, -1, -1, -1)), false);
		/* 10253 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff, 0xff00, 0xff0000, 1, -1, -1, -1)), false);
		/* 10254 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10255 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10256 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10257 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 10258 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 10259 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("msadpcm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10260 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10261 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("alaw", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10262 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("dvi/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10263 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("g723", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10264 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("g723/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10265 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("gsm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10266 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("gsm/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10267 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("gsm/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10268 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10269 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("ima4/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10270 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 10271 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 10272 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray)), false);
		/* 10273 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10274 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10275 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10276 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10277 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10278 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10279 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10280 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10281 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("gsm", 8000.0, -1, 1, -1, -1, 264, -1.0, Format.byteArray)), false);
		/* 10282 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("g723", 8000.0, -1, 1, -1, -1, 192, -1.0, Format.byteArray)), false);
		/* 10283 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new VideoFormat("jpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 10284 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new VideoFormat("jpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10285 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new VideoFormat("mpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 10286 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray).matches(new VideoFormat("mpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10287 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray)), false);
		/* 10288 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray)), false);
		/* 10289 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 1, 32, -1.0, Format.byteArray)), false);
		/* 10290 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 1, 16, -1.0, Format.byteArray)), false);
		/* 10291 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray)), false);
		/* 10292 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray)), false);
		/* 10293 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray)), false);
		/* 10294 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray)), false);
		/* 10295 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray)), false);
		/* 10296 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray)), false);
		/* 10297 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray)), false);
		/* 10298 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray)), true);
		/* 10299 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10300 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10301 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10302 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10303 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10304 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10305 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new VideoFormat("cvid", null, -1, Format.byteArray, -1.0f)), false);
		/* 10306 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new VideoFormat("h263", null, -1, Format.byteArray, -1.0f)), false);
		/* 10307 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new VideoFormat("h263/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10308 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, null, -1.0f, -1, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 10309 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.byteArray, -1.0f, 24, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 10310 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff0000, 0xff00, 0xff, 1, -1, -1, -1)), false);
		/* 10311 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff, 0xff00, 0xff0000, 1, -1, -1, -1)), false);
		/* 10312 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10313 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10314 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 10315 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10316 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 10317 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new AudioFormat("msadpcm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10318 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10319 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new AudioFormat("alaw", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10320 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new AudioFormat("dvi/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10321 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new AudioFormat("g723", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10322 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new AudioFormat("g723/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10323 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new AudioFormat("gsm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10324 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new AudioFormat("gsm/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10325 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new AudioFormat("gsm/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10326 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10327 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new AudioFormat("ima4/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10328 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 10329 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 10330 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray)), false);
		/* 10331 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10332 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10333 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10334 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10335 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10336 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10337 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10338 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10339 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new AudioFormat("gsm", 8000.0, -1, 1, -1, -1, 264, -1.0, Format.byteArray)), false);
		/* 10340 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new AudioFormat("g723", 8000.0, -1, 1, -1, -1, 192, -1.0, Format.byteArray)), false);
		/* 10341 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new VideoFormat("jpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 10342 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new VideoFormat("jpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10343 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new VideoFormat("mpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 10344 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray).matches(new VideoFormat("mpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10345 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray)), false);
		/* 10346 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray)), false);
		/* 10347 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 1, 16, -1.0, Format.byteArray)), false);
		/* 10348 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 1, 32, -1.0, Format.byteArray)), false);
		/* 10349 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 0, 16, -1.0, Format.byteArray)), false);
		/* 10350 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, 32, -1.0, Format.byteArray)), false);
		/* 10351 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, 16, -1.0, Format.byteArray)), false);
		/* 10352 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, 32, -1.0, Format.byteArray)), false);
		/* 10353 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 1, 8, -1.0, Format.byteArray)), false);
		/* 10354 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 1, 16, -1.0, Format.byteArray)), false);
		/* 10355 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 8, 1, -1, 0, 8, -1.0, Format.byteArray)), false);
		/* 10356 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray)), true);
		/* 10357 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10358 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10359 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10360 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10361 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10362 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10363 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new VideoFormat("cvid", null, -1, Format.byteArray, -1.0f)), false);
		/* 10364 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new VideoFormat("h263", null, -1, Format.byteArray, -1.0f)), false);
		/* 10365 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new VideoFormat("h263/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10366 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, null, -1.0f, -1, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 10367 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.byteArray, -1.0f, 24, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 10368 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff0000, 0xff00, 0xff, 1, -1, -1, -1)), false);
		/* 10369 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff, 0xff00, 0xff0000, 1, -1, -1, -1)), false);
		/* 10370 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10371 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10372 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10373 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 10374 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 10375 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("msadpcm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10376 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10377 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("alaw", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10378 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("dvi/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10379 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("g723", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10380 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("g723/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10381 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("gsm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10382 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("gsm/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10383 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("gsm/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10384 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10385 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("ima4/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10386 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 10387 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 10388 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray)), false);
		/* 10389 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10390 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10391 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10392 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10393 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10394 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10395 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10396 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10397 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("gsm", 8000.0, -1, 1, -1, -1, 264, -1.0, Format.byteArray)), false);
		/* 10398 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new AudioFormat("g723", 8000.0, -1, 1, -1, -1, 192, -1.0, Format.byteArray)), false);
		/* 10399 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new VideoFormat("jpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 10400 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new VideoFormat("jpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10401 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new VideoFormat("mpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 10402 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 8, 2, -1, 0, 16, -1.0, Format.byteArray).matches(new VideoFormat("mpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10403 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", 8000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10404 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 10405 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10406 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10407 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10408 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10409 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10410 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10411 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("cvid", null, -1, Format.byteArray, -1.0f)), false);
		/* 10412 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("h263", null, -1, Format.byteArray, -1.0f)), false);
		/* 10413 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("h263/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10414 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, null, -1.0f, -1, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 10415 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.byteArray, -1.0f, 24, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 10416 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff0000, 0xff00, 0xff, 1, -1, -1, -1)), false);
		/* 10417 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff, 0xff00, 0xff0000, 1, -1, -1, -1)), false);
		/* 10418 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10419 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10420 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10421 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10422 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10423 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("msadpcm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10424 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 10425 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("alaw", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10426 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("dvi/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10427 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("g723", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10428 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("g723/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10429 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("gsm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10430 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("gsm/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10431 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("gsm/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10432 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10433 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ima4/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10434 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 10435 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 10436 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray)), true);
		/* 10437 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10438 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10439 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10440 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10441 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10442 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10443 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10444 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10445 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("gsm", 8000.0, -1, 1, -1, -1, 264, -1.0, Format.byteArray)), false);
		/* 10446 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("g723", 8000.0, -1, 1, -1, -1, 192, -1.0, Format.byteArray)), false);
		/* 10447 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("jpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 10448 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("jpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10449 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("mpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 10450 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("mpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10451 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray)), true);
		/* 10452 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", 8000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10453 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray)), true);
		/* 10454 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10455 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10456 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10457 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10458 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10459 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10460 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new VideoFormat("cvid", null, -1, Format.byteArray, -1.0f)), false);
		/* 10461 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new VideoFormat("h263", null, -1, Format.byteArray, -1.0f)), false);
		/* 10462 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new VideoFormat("h263/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10463 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, null, -1.0f, -1, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 10464 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.byteArray, -1.0f, 24, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 10465 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff0000, 0xff00, 0xff, 1, -1, -1, -1)), false);
		/* 10466 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff, 0xff00, 0xff0000, 1, -1, -1, -1)), false);
		/* 10467 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10468 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10469 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10470 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10471 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10472 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new AudioFormat("msadpcm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10473 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10474 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new AudioFormat("alaw", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10475 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new AudioFormat("dvi/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10476 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new AudioFormat("g723", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10477 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new AudioFormat("g723/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10478 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new AudioFormat("gsm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10479 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new AudioFormat("gsm/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10480 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new AudioFormat("gsm/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10481 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10482 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new AudioFormat("ima4/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10483 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 10484 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 10485 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray)), false);
		/* 10486 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 10487 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10488 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10489 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10490 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10491 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10492 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10493 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10494 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new AudioFormat("gsm", 8000.0, -1, 1, -1, -1, 264, -1.0, Format.byteArray)), false);
		/* 10495 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new AudioFormat("g723", 8000.0, -1, 1, -1, -1, 192, -1.0, Format.byteArray)), false);
		/* 10496 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new VideoFormat("jpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 10497 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new VideoFormat("jpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10498 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new VideoFormat("mpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 10499 */ assertEquals(new AudioFormat("ULAW/rtp", 22050.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new VideoFormat("mpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10500 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10501 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10502 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", 8000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10503 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 10504 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10505 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10506 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10507 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10508 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10509 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10510 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("cvid", null, -1, Format.byteArray, -1.0f)), false);
		/* 10511 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("h263", null, -1, Format.byteArray, -1.0f)), false);
		/* 10512 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("h263/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10513 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, null, -1.0f, -1, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 10514 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.byteArray, -1.0f, 24, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 10515 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff0000, 0xff00, 0xff, 1, -1, -1, -1)), false);
		/* 10516 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff, 0xff00, 0xff0000, 1, -1, -1, -1)), false);
		/* 10517 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10518 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10519 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10520 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10521 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10522 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("msadpcm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10523 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10524 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("alaw", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10525 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("dvi/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 10526 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("g723", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10527 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("g723/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10528 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("gsm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10529 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("gsm/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10530 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("gsm/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10531 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10532 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ima4/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10533 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 10534 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 10535 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray)), false);
		/* 10536 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10537 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10538 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10539 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10540 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10541 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10542 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10543 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10544 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("gsm", 8000.0, -1, 1, -1, -1, 264, -1.0, Format.byteArray)), false);
		/* 10545 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("g723", 8000.0, -1, 1, -1, -1, 192, -1.0, Format.byteArray)), false);
		/* 10546 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("jpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 10547 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("jpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10548 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("mpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 10549 */ assertEquals(new AudioFormat("dvi/rtp", 11025.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("mpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10550 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", 8000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10551 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray)), true);
		/* 10552 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10553 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10554 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10555 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10556 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10557 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10558 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new VideoFormat("cvid", null, -1, Format.byteArray, -1.0f)), false);
		/* 10559 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new VideoFormat("h263", null, -1, Format.byteArray, -1.0f)), false);
		/* 10560 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new VideoFormat("h263/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10561 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, null, -1.0f, -1, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 10562 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.byteArray, -1.0f, 24, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 10563 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff0000, 0xff00, 0xff, 1, -1, -1, -1)), false);
		/* 10564 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff, 0xff00, 0xff0000, 1, -1, -1, -1)), false);
		/* 10565 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10566 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10567 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10568 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10569 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10570 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("msadpcm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10571 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10572 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("alaw", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10573 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("dvi/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10574 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("g723", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10575 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("g723/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10576 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("gsm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 10577 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("gsm/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10578 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10579 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("ima4/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10580 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 10581 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 10582 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray)), false);
		/* 10583 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10584 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10585 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10586 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10587 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10588 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10589 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10590 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10591 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("gsm", 8000.0, -1, 1, -1, -1, 264, -1.0, Format.byteArray)), false);
		/* 10592 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("g723", 8000.0, -1, 1, -1, -1, 192, -1.0, Format.byteArray)), false);
		/* 10593 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new VideoFormat("jpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 10594 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new VideoFormat("jpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10595 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new VideoFormat("mpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 10596 */ assertEquals(new AudioFormat("gsm", 11025.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new VideoFormat("mpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10597 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", 8000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10598 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray)), true);
		/* 10599 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10600 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10601 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10602 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10603 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10604 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10605 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new VideoFormat("cvid", null, -1, Format.byteArray, -1.0f)), false);
		/* 10606 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new VideoFormat("h263", null, -1, Format.byteArray, -1.0f)), false);
		/* 10607 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new VideoFormat("h263/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10608 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, null, -1.0f, -1, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 10609 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.byteArray, -1.0f, 24, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 10610 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff0000, 0xff00, 0xff, 1, -1, -1, -1)), false);
		/* 10611 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff, 0xff00, 0xff0000, 1, -1, -1, -1)), false);
		/* 10612 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10613 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10614 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10615 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10616 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10617 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("msadpcm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10618 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10619 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("alaw", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10620 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("dvi/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10621 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("g723", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10622 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("g723/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10623 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("gsm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10624 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("gsm/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10625 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("gsm/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10626 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 10627 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("ima4/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10628 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 10629 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 10630 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray)), false);
		/* 10631 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10632 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10633 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10634 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10635 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10636 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10637 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10638 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10639 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("gsm", 8000.0, -1, 1, -1, -1, 264, -1.0, Format.byteArray)), false);
		/* 10640 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("g723", 8000.0, -1, 1, -1, -1, 192, -1.0, Format.byteArray)), false);
		/* 10641 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new VideoFormat("jpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 10642 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new VideoFormat("jpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10643 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new VideoFormat("mpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 10644 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new VideoFormat("mpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10645 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10646 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10647 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", 8000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10648 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 10649 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10650 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10651 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10652 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10653 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10654 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10655 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("cvid", null, -1, Format.byteArray, -1.0f)), false);
		/* 10656 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("h263", null, -1, Format.byteArray, -1.0f)), false);
		/* 10657 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("h263/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10658 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, null, -1.0f, -1, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 10659 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.byteArray, -1.0f, 24, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 10660 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff0000, 0xff00, 0xff, 1, -1, -1, -1)), false);
		/* 10661 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff, 0xff00, 0xff0000, 1, -1, -1, -1)), false);
		/* 10662 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10663 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10664 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10665 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10666 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10667 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("msadpcm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10668 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10669 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("alaw", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10670 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("dvi/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 10671 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("g723", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10672 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("g723/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10673 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("gsm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10674 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("gsm/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10675 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("gsm/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10676 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10677 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ima4/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10678 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 10679 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 10680 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray)), false);
		/* 10681 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10682 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10683 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10684 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10685 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10686 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10687 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10688 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10689 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("gsm", 8000.0, -1, 1, -1, -1, 264, -1.0, Format.byteArray)), false);
		/* 10690 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("g723", 8000.0, -1, 1, -1, -1, 192, -1.0, Format.byteArray)), false);
		/* 10691 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("jpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 10692 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("jpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10693 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("mpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 10694 */ assertEquals(new AudioFormat("dvi/rtp", 16000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("mpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10695 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", 8000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10696 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray)), true);
		/* 10697 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10698 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10699 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10700 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10701 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10702 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10703 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new VideoFormat("cvid", null, -1, Format.byteArray, -1.0f)), false);
		/* 10704 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new VideoFormat("h263", null, -1, Format.byteArray, -1.0f)), false);
		/* 10705 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new VideoFormat("h263/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10706 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, null, -1.0f, -1, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 10707 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.byteArray, -1.0f, 24, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 10708 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff0000, 0xff00, 0xff, 1, -1, -1, -1)), false);
		/* 10709 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff, 0xff00, 0xff0000, 1, -1, -1, -1)), false);
		/* 10710 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10711 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10712 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10713 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10714 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10715 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("msadpcm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10716 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10717 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("alaw", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10718 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("dvi/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10719 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("g723", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10720 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("g723/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10721 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("gsm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 10722 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("gsm/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10723 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10724 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("ima4/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10725 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 10726 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 10727 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray)), false);
		/* 10728 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10729 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10730 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10731 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10732 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10733 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10734 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10735 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10736 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("gsm", 8000.0, -1, 1, -1, -1, 264, -1.0, Format.byteArray)), false);
		/* 10737 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("g723", 8000.0, -1, 1, -1, -1, 192, -1.0, Format.byteArray)), false);
		/* 10738 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new VideoFormat("jpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 10739 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new VideoFormat("jpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10740 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new VideoFormat("mpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 10741 */ assertEquals(new AudioFormat("gsm", 16000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new VideoFormat("mpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10742 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", 8000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10743 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray)), true);
		/* 10744 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10745 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10746 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10747 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10748 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10749 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10750 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new VideoFormat("cvid", null, -1, Format.byteArray, -1.0f)), false);
		/* 10751 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new VideoFormat("h263", null, -1, Format.byteArray, -1.0f)), false);
		/* 10752 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new VideoFormat("h263/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10753 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, null, -1.0f, -1, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 10754 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.byteArray, -1.0f, 24, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 10755 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff0000, 0xff00, 0xff, 1, -1, -1, -1)), false);
		/* 10756 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff, 0xff00, 0xff0000, 1, -1, -1, -1)), false);
		/* 10757 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10758 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10759 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10760 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10761 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10762 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("msadpcm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10763 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10764 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("alaw", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10765 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("dvi/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10766 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("g723", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10767 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("g723/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10768 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("gsm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10769 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("gsm/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10770 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("gsm/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10771 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 10772 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("ima4/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10773 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 10774 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 10775 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray)), false);
		/* 10776 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10777 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10778 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10779 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10780 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10781 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10782 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10783 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10784 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("gsm", 8000.0, -1, 1, -1, -1, 264, -1.0, Format.byteArray)), false);
		/* 10785 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("g723", 8000.0, -1, 1, -1, -1, 192, -1.0, Format.byteArray)), false);
		/* 10786 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new VideoFormat("jpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 10787 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new VideoFormat("jpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10788 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new VideoFormat("mpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 10789 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new VideoFormat("mpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10790 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10791 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10792 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10793 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10794 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", 8000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10795 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 10796 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10797 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10798 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10799 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10800 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10801 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10802 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("cvid", null, -1, Format.byteArray, -1.0f)), false);
		/* 10803 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("h263", null, -1, Format.byteArray, -1.0f)), false);
		/* 10804 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("h263/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10805 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, null, -1.0f, -1, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 10806 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.byteArray, -1.0f, 24, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 10807 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff0000, 0xff00, 0xff, 1, -1, -1, -1)), false);
		/* 10808 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff, 0xff00, 0xff0000, 1, -1, -1, -1)), false);
		/* 10809 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10810 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10811 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10812 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10813 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10814 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("msadpcm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10815 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10816 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("alaw", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10817 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("dvi/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 10818 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("g723", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10819 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("g723/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10820 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("gsm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10821 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("gsm/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10822 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("gsm/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10823 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10824 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ima4/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10825 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 10826 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 10827 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray)), false);
		/* 10828 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10829 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10830 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10831 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10832 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10833 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10834 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10835 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10836 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("gsm", 8000.0, -1, 1, -1, -1, 264, -1.0, Format.byteArray)), false);
		/* 10837 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("g723", 8000.0, -1, 1, -1, -1, 192, -1.0, Format.byteArray)), false);
		/* 10838 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("jpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 10839 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("jpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10840 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("mpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 10841 */ assertEquals(new AudioFormat("dvi/rtp", 32000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("mpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10842 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", 8000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10843 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray)), true);
		/* 10844 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10845 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10846 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10847 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10848 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10849 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10850 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new VideoFormat("cvid", null, -1, Format.byteArray, -1.0f)), false);
		/* 10851 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new VideoFormat("h263", null, -1, Format.byteArray, -1.0f)), false);
		/* 10852 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new VideoFormat("h263/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10853 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, null, -1.0f, -1, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 10854 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.byteArray, -1.0f, 24, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 10855 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff0000, 0xff00, 0xff, 1, -1, -1, -1)), false);
		/* 10856 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff, 0xff00, 0xff0000, 1, -1, -1, -1)), false);
		/* 10857 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10858 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10859 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10860 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10861 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10862 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("msadpcm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10863 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10864 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("alaw", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10865 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("dvi/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10866 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("g723", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10867 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("g723/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10868 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("gsm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 10869 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("gsm/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10870 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10871 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("ima4/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10872 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 10873 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 10874 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray)), false);
		/* 10875 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10876 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10877 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10878 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10879 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10880 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10881 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10882 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10883 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("gsm", 8000.0, -1, 1, -1, -1, 264, -1.0, Format.byteArray)), false);
		/* 10884 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("g723", 8000.0, -1, 1, -1, -1, 192, -1.0, Format.byteArray)), false);
		/* 10885 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new VideoFormat("jpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 10886 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new VideoFormat("jpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10887 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new VideoFormat("mpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 10888 */ assertEquals(new AudioFormat("gsm", 32000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new VideoFormat("mpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10889 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", 8000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10890 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray)), true);
		/* 10891 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10892 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10893 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10894 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10895 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10896 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10897 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new VideoFormat("cvid", null, -1, Format.byteArray, -1.0f)), false);
		/* 10898 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new VideoFormat("h263", null, -1, Format.byteArray, -1.0f)), false);
		/* 10899 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new VideoFormat("h263/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10900 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, null, -1.0f, -1, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 10901 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.byteArray, -1.0f, 24, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 10902 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff0000, 0xff00, 0xff, 1, -1, -1, -1)), false);
		/* 10903 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff, 0xff00, 0xff0000, 1, -1, -1, -1)), false);
		/* 10904 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10905 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10906 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10907 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10908 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10909 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("msadpcm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10910 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10911 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("alaw", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10912 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("dvi/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10913 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("g723", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10914 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("g723/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10915 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("gsm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10916 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("gsm/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10917 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("gsm/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10918 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 10919 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("ima4/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10920 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 10921 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 10922 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray)), false);
		/* 10923 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10924 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10925 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10926 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10927 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10928 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10929 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10930 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10931 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("gsm", 8000.0, -1, 1, -1, -1, 264, -1.0, Format.byteArray)), false);
		/* 10932 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("g723", 8000.0, -1, 1, -1, -1, 192, -1.0, Format.byteArray)), false);
		/* 10933 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new VideoFormat("jpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 10934 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new VideoFormat("jpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10935 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new VideoFormat("mpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 10936 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new VideoFormat("mpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10937 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10938 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10939 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", 8000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10940 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 10941 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10942 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10943 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10944 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10945 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10946 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10947 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("cvid", null, -1, Format.byteArray, -1.0f)), false);
		/* 10948 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("h263", null, -1, Format.byteArray, -1.0f)), false);
		/* 10949 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("h263/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10950 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, null, -1.0f, -1, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 10951 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.byteArray, -1.0f, 24, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 10952 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff0000, 0xff00, 0xff, 1, -1, -1, -1)), false);
		/* 10953 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff, 0xff00, 0xff0000, 1, -1, -1, -1)), false);
		/* 10954 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10955 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10956 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10957 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10958 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10959 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("msadpcm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10960 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10961 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("alaw", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10962 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("dvi/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 10963 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("g723", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10964 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("g723/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10965 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("gsm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10966 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("gsm/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10967 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("gsm/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10968 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10969 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ima4/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10970 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 10971 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 10972 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray)), false);
		/* 10973 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10974 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10975 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10976 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10977 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10978 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10979 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10980 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10981 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("gsm", 8000.0, -1, 1, -1, -1, 264, -1.0, Format.byteArray)), false);
		/* 10982 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("g723", 8000.0, -1, 1, -1, -1, 192, -1.0, Format.byteArray)), false);
		/* 10983 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("jpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 10984 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("jpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10985 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("mpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 10986 */ assertEquals(new AudioFormat("dvi/rtp", 44100.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("mpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10987 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", 8000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 10988 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray)), true);
		/* 10989 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10990 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10991 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10992 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10993 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10994 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 10995 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new VideoFormat("cvid", null, -1, Format.byteArray, -1.0f)), false);
		/* 10996 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new VideoFormat("h263", null, -1, Format.byteArray, -1.0f)), false);
		/* 10997 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new VideoFormat("h263/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 10998 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, null, -1.0f, -1, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 10999 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.byteArray, -1.0f, 24, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		}
		public void test2()
		{
		/* 11000 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff0000, 0xff00, 0xff, 1, -1, -1, -1)), false);
		/* 11001 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff, 0xff00, 0xff0000, 1, -1, -1, -1)), false);
		/* 11002 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11003 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11004 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11005 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11006 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11007 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("msadpcm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11008 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11009 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("alaw", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11010 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("dvi/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11011 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("g723", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11012 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("g723/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11013 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("gsm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 11014 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("gsm/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11015 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11016 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("ima4/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11017 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 11018 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 11019 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray)), false);
		/* 11020 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11021 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11022 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11023 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11024 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11025 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11026 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11027 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11028 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("gsm", 8000.0, -1, 1, -1, -1, 264, -1.0, Format.byteArray)), false);
		/* 11029 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("g723", 8000.0, -1, 1, -1, -1, 192, -1.0, Format.byteArray)), false);
		/* 11030 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new VideoFormat("jpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 11031 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new VideoFormat("jpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 11032 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new VideoFormat("mpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 11033 */ assertEquals(new AudioFormat("gsm", 44100.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new VideoFormat("mpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 11034 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", 8000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11035 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray)), true);
		/* 11036 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11037 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11038 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11039 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11040 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11041 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11042 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new VideoFormat("cvid", null, -1, Format.byteArray, -1.0f)), false);
		/* 11043 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new VideoFormat("h263", null, -1, Format.byteArray, -1.0f)), false);
		/* 11044 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new VideoFormat("h263/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 11045 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, null, -1.0f, -1, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 11046 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.byteArray, -1.0f, 24, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 11047 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff0000, 0xff00, 0xff, 1, -1, -1, -1)), false);
		/* 11048 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff, 0xff00, 0xff0000, 1, -1, -1, -1)), false);
		/* 11049 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11050 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11051 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11052 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11053 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11054 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("msadpcm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11055 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11056 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("alaw", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11057 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("dvi/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11058 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("g723", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11059 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("g723/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11060 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("gsm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11061 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("gsm/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11062 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("gsm/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11063 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 11064 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("ima4/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11065 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 11066 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 11067 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray)), false);
		/* 11068 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11069 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11070 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11071 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11072 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11073 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11074 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11075 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11076 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("gsm", 8000.0, -1, 1, -1, -1, 264, -1.0, Format.byteArray)), false);
		/* 11077 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("g723", 8000.0, -1, 1, -1, -1, 192, -1.0, Format.byteArray)), false);
		/* 11078 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new VideoFormat("jpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 11079 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new VideoFormat("jpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 11080 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new VideoFormat("mpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 11081 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new VideoFormat("mpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 11082 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11083 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11084 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", 8000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11085 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 11086 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11087 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11088 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11089 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11090 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11091 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11092 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("cvid", null, -1, Format.byteArray, -1.0f)), false);
		/* 11093 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("h263", null, -1, Format.byteArray, -1.0f)), false);
		/* 11094 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("h263/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 11095 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, null, -1.0f, -1, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 11096 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.byteArray, -1.0f, 24, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 11097 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff0000, 0xff00, 0xff, 1, -1, -1, -1)), false);
		/* 11098 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff, 0xff00, 0xff0000, 1, -1, -1, -1)), false);
		/* 11099 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11100 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11101 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11102 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11103 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11104 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("msadpcm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11105 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11106 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("alaw", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11107 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("dvi/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 11108 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("g723", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11109 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("g723/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11110 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("gsm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11111 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("gsm/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11112 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("gsm/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11113 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11114 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ima4/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11115 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 11116 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 11117 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray)), false);
		/* 11118 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11119 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11120 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11121 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11122 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11123 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11124 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11125 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11126 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("gsm", 8000.0, -1, 1, -1, -1, 264, -1.0, Format.byteArray)), false);
		/* 11127 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("g723", 8000.0, -1, 1, -1, -1, 192, -1.0, Format.byteArray)), false);
		/* 11128 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("jpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 11129 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("jpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 11130 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("mpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 11131 */ assertEquals(new AudioFormat("dvi/rtp", 48000.0, 4, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("mpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 11132 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", 8000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11133 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray)), true);
		/* 11134 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11135 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11136 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11137 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11138 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11139 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11140 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new VideoFormat("cvid", null, -1, Format.byteArray, -1.0f)), false);
		/* 11141 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new VideoFormat("h263", null, -1, Format.byteArray, -1.0f)), false);
		/* 11142 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new VideoFormat("h263/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 11143 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, null, -1.0f, -1, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 11144 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.byteArray, -1.0f, 24, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 11145 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff0000, 0xff00, 0xff, 1, -1, -1, -1)), false);
		/* 11146 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff, 0xff00, 0xff0000, 1, -1, -1, -1)), false);
		/* 11147 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11148 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11149 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11150 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11151 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11152 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("msadpcm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11153 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11154 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("alaw", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11155 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("dvi/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11156 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("g723", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11157 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("g723/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11158 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("gsm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 11159 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("gsm/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11160 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11161 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("ima4/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11162 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 11163 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 11164 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray)), false);
		/* 11165 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11166 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11167 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11168 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11169 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11170 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11171 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11172 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11173 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("gsm", 8000.0, -1, 1, -1, -1, 264, -1.0, Format.byteArray)), false);
		/* 11174 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("g723", 8000.0, -1, 1, -1, -1, 192, -1.0, Format.byteArray)), false);
		/* 11175 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new VideoFormat("jpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 11176 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new VideoFormat("jpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 11177 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new VideoFormat("mpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 11178 */ assertEquals(new AudioFormat("gsm", 48000.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new VideoFormat("mpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 11179 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", 8000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11180 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray)), true);
		/* 11181 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11182 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11183 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11184 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11185 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11186 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11187 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new VideoFormat("cvid", null, -1, Format.byteArray, -1.0f)), false);
		/* 11188 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new VideoFormat("h263", null, -1, Format.byteArray, -1.0f)), false);
		/* 11189 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new VideoFormat("h263/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 11190 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, null, -1.0f, -1, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 11191 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.byteArray, -1.0f, 24, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 11192 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff0000, 0xff00, 0xff, 1, -1, -1, -1)), false);
		/* 11193 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff, 0xff00, 0xff0000, 1, -1, -1, -1)), false);
		/* 11194 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11195 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11196 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11197 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11198 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11199 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("msadpcm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11200 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11201 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("alaw", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11202 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("dvi/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11203 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("g723", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11204 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("g723/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11205 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("gsm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11206 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("gsm/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11207 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("gsm/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11208 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 11209 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("ima4/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11210 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 11211 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 11212 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray)), false);
		/* 11213 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11214 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11215 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11216 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11217 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11218 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11219 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11220 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11221 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("gsm", 8000.0, -1, 1, -1, -1, 264, -1.0, Format.byteArray)), false);
		/* 11222 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new AudioFormat("g723", 8000.0, -1, 1, -1, -1, 192, -1.0, Format.byteArray)), false);
		/* 11223 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new VideoFormat("jpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 11224 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new VideoFormat("jpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 11225 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new VideoFormat("mpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 11226 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 1, -1, -1, 272, -1.0, Format.byteArray).matches(new VideoFormat("mpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 11227 */ assertEquals(new AudioFormat("gsm", 22050.0, 16, 1, -1, -1, 264, -1.0, Format.byteArray).matches(new AudioFormat("gsm/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11228 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11229 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11230 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 11025.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray)), false);
		/* 11231 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", 8000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11232 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 11233 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11234 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11235 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11236 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11237 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11238 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11239 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("cvid", null, -1, Format.byteArray, -1.0f)), false);
		/* 11240 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("h263", null, -1, Format.byteArray, -1.0f)), false);
		/* 11241 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("h263/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 11242 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, null, -1.0f, -1, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 11243 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.byteArray, -1.0f, 24, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 11244 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff0000, 0xff00, 0xff, 1, -1, -1, -1)), false);
		/* 11245 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff, 0xff00, 0xff0000, 1, -1, -1, -1)), false);
		/* 11246 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11247 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11248 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11249 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11250 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11251 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("msadpcm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11252 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 11253 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("alaw", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11254 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("dvi/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11255 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("g723", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11256 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("g723/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11257 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("gsm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11258 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("gsm/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11259 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("gsm/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11260 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11261 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ima4/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11262 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 11263 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 11264 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray)), false);
		/* 11265 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11266 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11267 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11268 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11269 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11270 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11271 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11272 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11273 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("gsm", 8000.0, -1, 1, -1, -1, 264, -1.0, Format.byteArray)), false);
		/* 11274 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("g723", 8000.0, -1, 1, -1, -1, 192, -1.0, Format.byteArray)), false);
		/* 11275 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("jpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 11276 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("jpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 11277 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("mpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 11278 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("mpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 11279 */ assertEquals(new AudioFormat("ULAW", 11025.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", 11025.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11280 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", 8000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11281 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray)), true);
		/* 11282 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11283 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11284 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11285 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11286 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11287 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11288 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new VideoFormat("cvid", null, -1, Format.byteArray, -1.0f)), false);
		/* 11289 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new VideoFormat("h263", null, -1, Format.byteArray, -1.0f)), false);
		/* 11290 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new VideoFormat("h263/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 11291 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, null, -1.0f, -1, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 11292 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.byteArray, -1.0f, 24, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 11293 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff0000, 0xff00, 0xff, 1, -1, -1, -1)), false);
		/* 11294 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff, 0xff00, 0xff0000, 1, -1, -1, -1)), false);
		/* 11295 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11296 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11297 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11298 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11299 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11300 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("msadpcm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11301 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11302 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("alaw", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11303 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("dvi/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11304 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("g723", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11305 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("g723/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11306 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("gsm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11307 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("gsm/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11308 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("gsm/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11309 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 11310 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("ima4/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11311 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 11312 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 11313 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray)), false);
		/* 11314 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11315 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11316 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11317 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11318 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11319 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11320 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11321 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11322 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("gsm", 8000.0, -1, 1, -1, -1, 264, -1.0, Format.byteArray)), false);
		/* 11323 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("g723", 8000.0, -1, 1, -1, -1, 192, -1.0, Format.byteArray)), false);
		/* 11324 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new VideoFormat("jpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 11325 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new VideoFormat("jpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 11326 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new VideoFormat("mpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 11327 */ assertEquals(new AudioFormat("ima4", 11025.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new VideoFormat("mpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 11328 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11329 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11330 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 16000.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray)), false);
		/* 11331 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", 8000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11332 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 11333 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11334 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11335 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11336 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11337 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11338 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11339 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("cvid", null, -1, Format.byteArray, -1.0f)), false);
		/* 11340 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("h263", null, -1, Format.byteArray, -1.0f)), false);
		/* 11341 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("h263/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 11342 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, null, -1.0f, -1, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 11343 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.byteArray, -1.0f, 24, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 11344 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff0000, 0xff00, 0xff, 1, -1, -1, -1)), false);
		/* 11345 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff, 0xff00, 0xff0000, 1, -1, -1, -1)), false);
		/* 11346 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11347 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11348 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11349 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11350 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11351 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("msadpcm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11352 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 11353 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("alaw", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11354 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("dvi/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11355 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("g723", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11356 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("g723/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11357 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("gsm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11358 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("gsm/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11359 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("gsm/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11360 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11361 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ima4/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11362 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 11363 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 11364 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray)), false);
		/* 11365 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11366 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11367 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11368 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11369 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11370 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11371 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11372 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11373 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("gsm", 8000.0, -1, 1, -1, -1, 264, -1.0, Format.byteArray)), false);
		/* 11374 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("g723", 8000.0, -1, 1, -1, -1, 192, -1.0, Format.byteArray)), false);
		/* 11375 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("jpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 11376 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("jpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 11377 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("mpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 11378 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("mpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 11379 */ assertEquals(new AudioFormat("ULAW", 16000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", 16000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11380 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", 8000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11381 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray)), true);
		/* 11382 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11383 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11384 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11385 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11386 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11387 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11388 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new VideoFormat("cvid", null, -1, Format.byteArray, -1.0f)), false);
		/* 11389 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new VideoFormat("h263", null, -1, Format.byteArray, -1.0f)), false);
		/* 11390 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new VideoFormat("h263/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 11391 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, null, -1.0f, -1, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 11392 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.byteArray, -1.0f, 24, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 11393 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff0000, 0xff00, 0xff, 1, -1, -1, -1)), false);
		/* 11394 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff, 0xff00, 0xff0000, 1, -1, -1, -1)), false);
		/* 11395 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11396 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11397 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11398 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11399 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11400 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("msadpcm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11401 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11402 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("alaw", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11403 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("dvi/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11404 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("g723", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11405 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("g723/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11406 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("gsm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11407 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("gsm/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11408 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("gsm/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11409 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 11410 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("ima4/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11411 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 11412 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 11413 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray)), false);
		/* 11414 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11415 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11416 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11417 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11418 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11419 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11420 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11421 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11422 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("gsm", 8000.0, -1, 1, -1, -1, 264, -1.0, Format.byteArray)), false);
		/* 11423 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("g723", 8000.0, -1, 1, -1, -1, 192, -1.0, Format.byteArray)), false);
		/* 11424 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new VideoFormat("jpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 11425 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new VideoFormat("jpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 11426 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new VideoFormat("mpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 11427 */ assertEquals(new AudioFormat("ima4", 16000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new VideoFormat("mpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 11428 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11429 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11430 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 22050.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray)), false);
		/* 11431 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11432 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11433 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 32000.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray)), false);
		/* 11434 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", 8000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11435 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 11436 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11437 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11438 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11439 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11440 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11441 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11442 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("cvid", null, -1, Format.byteArray, -1.0f)), false);
		/* 11443 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("h263", null, -1, Format.byteArray, -1.0f)), false);
		/* 11444 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("h263/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 11445 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, null, -1.0f, -1, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 11446 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.byteArray, -1.0f, 24, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 11447 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff0000, 0xff00, 0xff, 1, -1, -1, -1)), false);
		/* 11448 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff, 0xff00, 0xff0000, 1, -1, -1, -1)), false);
		/* 11449 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11450 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11451 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11452 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11453 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11454 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("msadpcm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11455 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 11456 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("alaw", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11457 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("dvi/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11458 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("g723", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11459 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("g723/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11460 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("gsm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11461 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("gsm/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11462 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("gsm/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11463 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11464 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ima4/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11465 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 11466 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 11467 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray)), false);
		/* 11468 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11469 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11470 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11471 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11472 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11473 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11474 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11475 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11476 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("gsm", 8000.0, -1, 1, -1, -1, 264, -1.0, Format.byteArray)), false);
		/* 11477 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("g723", 8000.0, -1, 1, -1, -1, 192, -1.0, Format.byteArray)), false);
		/* 11478 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("jpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 11479 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("jpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 11480 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("mpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 11481 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("mpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 11482 */ assertEquals(new AudioFormat("ULAW", 32000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", 32000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11483 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", 8000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11484 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray)), true);
		/* 11485 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11486 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11487 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11488 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11489 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11490 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11491 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new VideoFormat("cvid", null, -1, Format.byteArray, -1.0f)), false);
		/* 11492 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new VideoFormat("h263", null, -1, Format.byteArray, -1.0f)), false);
		/* 11493 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new VideoFormat("h263/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 11494 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, null, -1.0f, -1, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 11495 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.byteArray, -1.0f, 24, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 11496 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff0000, 0xff00, 0xff, 1, -1, -1, -1)), false);
		/* 11497 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff, 0xff00, 0xff0000, 1, -1, -1, -1)), false);
		/* 11498 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11499 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11500 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11501 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11502 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11503 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("msadpcm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11504 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11505 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("alaw", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11506 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("dvi/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11507 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("g723", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11508 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("g723/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11509 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("gsm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11510 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("gsm/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11511 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("gsm/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11512 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 11513 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("ima4/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11514 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 11515 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 11516 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray)), false);
		/* 11517 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11518 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11519 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11520 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11521 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11522 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11523 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11524 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11525 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("gsm", 8000.0, -1, 1, -1, -1, 264, -1.0, Format.byteArray)), false);
		/* 11526 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("g723", 8000.0, -1, 1, -1, -1, 192, -1.0, Format.byteArray)), false);
		/* 11527 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new VideoFormat("jpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 11528 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new VideoFormat("jpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 11529 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new VideoFormat("mpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 11530 */ assertEquals(new AudioFormat("ima4", 32000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new VideoFormat("mpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 11531 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11532 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11533 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 44100.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray)), false);
		/* 11534 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", 8000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11535 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 11536 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11537 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11538 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11539 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11540 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11541 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11542 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("cvid", null, -1, Format.byteArray, -1.0f)), false);
		/* 11543 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("h263", null, -1, Format.byteArray, -1.0f)), false);
		/* 11544 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("h263/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 11545 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, null, -1.0f, -1, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 11546 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.byteArray, -1.0f, 24, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 11547 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff0000, 0xff00, 0xff, 1, -1, -1, -1)), false);
		/* 11548 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff, 0xff00, 0xff0000, 1, -1, -1, -1)), false);
		/* 11549 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11550 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11551 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11552 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11553 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11554 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("msadpcm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11555 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 11556 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("alaw", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11557 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("dvi/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11558 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("g723", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11559 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("g723/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11560 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("gsm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11561 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("gsm/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11562 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("gsm/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11563 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11564 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ima4/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11565 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 11566 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 11567 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray)), false);
		/* 11568 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11569 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11570 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11571 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11572 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11573 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11574 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11575 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11576 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("gsm", 8000.0, -1, 1, -1, -1, 264, -1.0, Format.byteArray)), false);
		/* 11577 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("g723", 8000.0, -1, 1, -1, -1, 192, -1.0, Format.byteArray)), false);
		/* 11578 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("jpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 11579 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("jpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 11580 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("mpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 11581 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("mpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 11582 */ assertEquals(new AudioFormat("ULAW", 44100.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", 44100.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11583 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", 8000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11584 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray)), true);
		/* 11585 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11586 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11587 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11588 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11589 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11590 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11591 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new VideoFormat("cvid", null, -1, Format.byteArray, -1.0f)), false);
		/* 11592 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new VideoFormat("h263", null, -1, Format.byteArray, -1.0f)), false);
		/* 11593 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new VideoFormat("h263/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 11594 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, null, -1.0f, -1, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 11595 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.byteArray, -1.0f, 24, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 11596 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff0000, 0xff00, 0xff, 1, -1, -1, -1)), false);
		/* 11597 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff, 0xff00, 0xff0000, 1, -1, -1, -1)), false);
		/* 11598 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11599 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11600 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11601 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11602 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11603 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("msadpcm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11604 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11605 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("alaw", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11606 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("dvi/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11607 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("g723", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11608 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("g723/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11609 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("gsm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11610 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("gsm/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11611 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("gsm/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11612 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 11613 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("ima4/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11614 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 11615 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 11616 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray)), false);
		/* 11617 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11618 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11619 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11620 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11621 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11622 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11623 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11624 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11625 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("gsm", 8000.0, -1, 1, -1, -1, 264, -1.0, Format.byteArray)), false);
		/* 11626 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("g723", 8000.0, -1, 1, -1, -1, 192, -1.0, Format.byteArray)), false);
		/* 11627 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new VideoFormat("jpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 11628 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new VideoFormat("jpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 11629 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new VideoFormat("mpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 11630 */ assertEquals(new AudioFormat("ima4", 44100.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new VideoFormat("mpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 11631 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11632 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11633 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 1, 16, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 1, 32, -1.0, Format.byteArray)), false);
		/* 11634 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", 8000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11635 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 11636 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11637 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11638 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11639 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11640 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11641 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11642 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("cvid", null, -1, Format.byteArray, -1.0f)), false);
		/* 11643 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("h263", null, -1, Format.byteArray, -1.0f)), false);
		/* 11644 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("h263/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 11645 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, null, -1.0f, -1, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 11646 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.byteArray, -1.0f, 24, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 11647 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff0000, 0xff00, 0xff, 1, -1, -1, -1)), false);
		/* 11648 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff, 0xff00, 0xff0000, 1, -1, -1, -1)), false);
		/* 11649 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11650 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11651 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11652 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11653 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11654 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("msadpcm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11655 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 11656 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("alaw", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11657 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("dvi/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11658 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("g723", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11659 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("g723/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11660 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("gsm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11661 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("gsm/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11662 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("gsm/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11663 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11664 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ima4/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11665 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 11666 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 11667 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray)), false);
		/* 11668 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11669 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11670 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11671 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11672 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11673 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11674 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11675 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11676 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("gsm", 8000.0, -1, 1, -1, -1, 264, -1.0, Format.byteArray)), false);
		/* 11677 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("g723", 8000.0, -1, 1, -1, -1, 192, -1.0, Format.byteArray)), false);
		/* 11678 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("jpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 11679 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("jpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 11680 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("mpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 11681 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray).matches(new VideoFormat("mpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 11682 */ assertEquals(new AudioFormat("ULAW", 48000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", 48000.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11683 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", 8000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11684 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray)), true);
		/* 11685 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11686 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11687 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11688 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11689 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11690 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11691 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new VideoFormat("cvid", null, -1, Format.byteArray, -1.0f)), false);
		/* 11692 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new VideoFormat("h263", null, -1, Format.byteArray, -1.0f)), false);
		/* 11693 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new VideoFormat("h263/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 11694 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, null, -1.0f, -1, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 11695 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.byteArray, -1.0f, 24, 0xffffffff, 0xffffffff, 0xffffffff, -1, -1, -1, -1)), false);
		/* 11696 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff0000, 0xff00, 0xff, 1, -1, -1, -1)), false);
		/* 11697 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new RGBFormat(null, -1, Format.intArray, -1.0f, 32, 0xff, 0xff00, 0xff0000, 1, -1, -1, -1)), false);
		/* 11698 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11699 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11700 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11701 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11702 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11703 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("msadpcm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11704 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11705 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("alaw", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11706 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("dvi/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11707 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("g723", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11708 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("g723/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11709 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("gsm", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11710 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("gsm/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11711 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("gsm/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11712 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("ima4", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 11713 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("ima4/ms", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11714 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, 1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 11715 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 16, -1, 0, 1, -1, -1.0, Format.byteArray)), false);
		/* 11716 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", -1.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray)), false);
		/* 11717 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11718 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 16000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11719 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 22050.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11720 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 24000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11721 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 32000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11722 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 44100.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11723 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpeglayer3", 48000.0, -1, -1, -1, 1, -1, -1.0, Format.byteArray)), false);
		/* 11724 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("mpegaudio/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11725 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("gsm", 8000.0, -1, 1, -1, -1, 264, -1.0, Format.byteArray)), false);
		/* 11726 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new AudioFormat("g723", 8000.0, -1, 1, -1, -1, 192, -1.0, Format.byteArray)), false);
		/* 11727 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new VideoFormat("jpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 11728 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new VideoFormat("jpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 11729 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new VideoFormat("mpeg", null, -1, Format.byteArray, -1.0f)), false);
		/* 11730 */ assertEquals(new AudioFormat("ima4", 48000.0, 16, 2, -1, -1, 544, -1.0, Format.byteArray).matches(new VideoFormat("mpeg/rtp", null, -1, Format.byteArray, -1.0f)), false);
		/* 11731 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 1, 1, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11732 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 1, 1, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11733 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 1, 1, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11734 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 1, 1, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11735 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 1, 1, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11736 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 1, 1, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11737 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 1, 1, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11738 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 1, 1, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11739 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 1, 1, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11740 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 1, 1, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11741 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11742 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11743 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 2, 1, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11744 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 2, 1, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11745 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 2, 1, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11746 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 2, 1, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11747 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 2, 1, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11748 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 2, 1, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11749 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 2, 1, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11750 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 2, 1, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11751 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 2, 1, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11752 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 2, 1, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11753 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11754 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 1, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11755 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 1, 0, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11756 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 1, 0, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11757 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 1, 0, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11758 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 1, 0, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11759 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 1, 0, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11760 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 1, 0, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11761 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 1, 0, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11762 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 1, 0, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11763 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 1, 0, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11764 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 1, 0, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11765 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11766 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 0, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11767 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 2, 0, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11768 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 2, 0, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11769 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 2, 0, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11770 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 2, 0, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11771 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 2, 0, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11772 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 2, 0, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11773 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 2, 0, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11774 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 2, 0, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11775 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 2, 0, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11776 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 2, 0, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11777 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11778 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 0, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11779 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 1, 1, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11780 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 1, 1, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11781 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 1, 1, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11782 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 1, 1, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11783 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 1, 1, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11784 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 1, 1, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11785 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 1, 1, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11786 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 1, 1, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11787 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 1, 1, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11788 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 1, 1, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11789 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11790 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 1, 1, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11791 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 2, 1, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11792 */ assertEquals(new AudioFormat("LINEAR", 11025.0, 16, 2, 1, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11793 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 2, 1, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11794 */ assertEquals(new AudioFormat("LINEAR", 16000.0, 16, 2, 1, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11795 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 2, 1, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11796 */ assertEquals(new AudioFormat("LINEAR", 22050.0, 16, 2, 1, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11797 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 2, 1, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11798 */ assertEquals(new AudioFormat("LINEAR", 32000.0, 16, 2, 1, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11799 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 2, 1, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11800 */ assertEquals(new AudioFormat("LINEAR", 44100.0, 16, 2, 1, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11801 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11802 */ assertEquals(new AudioFormat("LINEAR", 48000.0, 16, 2, 1, 0, -1, -1.0, Format.byteArray).matches(new AudioFormat("LINEAR", -1.0, 8, 2, -1, -1, -1, -1.0, Format.byteArray)), false);
		/* 11803 */ assertEquals(new AudioFormat("ULAW/rtp", 8000.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", 8000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 11804 */ assertEquals(new AudioFormat("ULAW/rtp", 8000.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", 8000.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray)), true);
		/* 11805 */ assertEquals(new AudioFormat("ULAW", 8000.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray).matches(new AudioFormat("ULAW", 8000.0, 8, 1, -1, -1, -1, -1.0, Format.byteArray)), true);
		/* 11806 */ assertEquals(new AudioFormat("ULAW/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", 8000.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray)), true);
		/* 11807 */ assertEquals(new AudioFormat("mpegaudio/rtp", -1.0, -1, -1, -1, -1, -1, -1.0, Format.byteArray).matches(new AudioFormat("ULAW/rtp", 8000.0, 8, 1, -1, -1, 8, -1.0, Format.byteArray)), false);
		
	}
}
